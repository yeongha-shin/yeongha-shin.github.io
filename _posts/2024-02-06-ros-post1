---
layout: post
title: How to Use ROS system?
subtitle: Follow my lead!
gh-repo: yeongha-shin
gh-badge: [star, fork, follow]
tags: [ros]
comments: true
author: Yeongha Shin
---

# How to Initialize ROS system
## 1. 작업 공간 생성

~~~
# 처음 작업 공간에 대한 폭더를 만듭니다
$ mkdir -p ~/catkin_ws/src
# 그 작업공간 폴더로 이동합니다
$ cd ~/catkin_ws/src
# 작업 공간을 초기화 합니다 ! 
$ catkin_init_workspace
# 빈 작업 공간에서 빌드를 수행합니다 ! 
$ cd ~/catkin_ws
$ catkin_make
# 셋업파일을 환경에 설정합니다 
$ source ~/catkin_ws/devel/setup.sh
~~~

## 2. 패키지 생성
패키지를 생성한다는 것은, 모듈화된 소프트웨어 구동의 최소 단위를 의미하며, 이 안에는 노드, 메시지, 런치 파일 등이 포함되어 있습니다 !

~~~

#  src 폴더로 이동을 합니다 ! 
$ cd ~/catkin_ws/src
# Create a new catkin package:
## catkin_create_pkg <새 패키지 이름을 적으세요> <의존성 패키지 ex. roscpp같은 것을 적으세요 ! >`
## `<의존성 패키지들은 !>`는 생략 후 나중에 package.xml로 지정 가능할수 있다고 합니다 !

# 이렇게 되면 안에, 헤더파일들이 존재하는 include, 소스코드 폴더들이 있는 src, 빌드 설정 파일들이 적혀 있는 
# cmake 파일, xml에서는 패키지 설정 파일에 대해서 수정할 수 있도록 하는 파일이 생깁니다 !

# 이제 생성한 패키지 명으로 이동해보세요 ! 
$ cd <패키지 명 >
# 나중에 사용할만한 폴더들을 미리 만들어 두는 것도 좋습니다 ! 
$ mkdir launch
$ mkdir scripts
$ mkdir src

# --directory /path/to/catkin/ws라고 지정하는 것을 통해서, 바깥에 존재하는 위치에서 catkin 빌드를 수행할 수 있습니다 ! 
$ catkin_make --directory ~/catkin_ws
# 또는 --pkg라고 명명하는 것을 통해서 특정 패키지의 빌드를 수행할 수 있습니다 !
$ catkin_make --pkg turtlebot_dabit

~~~

